/*
 * Copyright (C) 2022 Open Source Robotics Foundation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

// GLSL shaders
vertex_program CameraDistortionMapVS_GLSL glsl
{
  source camera_distortion_map_vs.glsl
}

fragment_program CameraDistortionMapFS_GLSL glsl
{
  source camera_distortion_map_fs.glsl
  default_params
  {
    param_named RT int 0
  }
}

// Vulkan shaders
vertex program CameraDistortionMapVS_VK glslvk
{
  source camera_distortion_map_vs.glsl
}

fragment_program CameraDistortionMapFS_VK glslvk
{
  source camera_distortion_map_fs.glsl
}

// Metal shaders
vertex program CameraDistortionMapVS_Metal metal
{
  source camera_distortion_map_vs.metal
}

fragment_program CameraDistortionMapFS_Metal metal
{
  source camera_distortion_map_fs.metal
  shader_reflection_pair_hint CameraDistortionMapVS_Metal
}

// Unified shaders
vertex_program CameraDistortionMapVS unified
{
  delegate CameraDistortionMapVS_GLSL
  delegate CameraDistortionMapVS_Metal
  delegate CameraDistortionMapVS_VK

  default_params
  {
    param_named_auto worldViewProj worldviewproj_matrix
  }
}

fragment_program CameraDistortionMapFS unified
{
  delegate CameraDistortionMapFS_GLSL
  delegate CameraDistortionMapFS_Metal
  delegate CameraDistortionMapFS_VK

  default_params
  {
    param_named distortionMap int 1
    param_named scale float3 1.0 1.0 1.0
  }
}

material Distortion
{
  technique
  {
    pass
    {
      depth_check off
      depth_write off
      cull_hardware none

      vertex_program_ref CameraDistortionMapVS { }
      fragment_program_ref CameraDistortionMapFS { }

      texture_unit RT
      {
        tex_coord_set 0
        tex_address_mode border
        filtering linear linear linear
      }
    }
  }
}
